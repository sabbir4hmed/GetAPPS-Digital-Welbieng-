<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>